---
name: rust
on:
  workflow_call:
    inputs:
      coveralls:
        required: false
        type: boolean
        default: false
    secrets:
      CARGO_REGISTRY_TOKEN:
        required: false
      PACKAGECLOUD_TOKEN:
        required: false
jobs:
  # Rust actions from:
  # https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
  cargo-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
  test-coverage:
    name: cargo test with coveralls
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: coverage
        uses: docker://lpenz/ghaction-rust-coverage:0.5.0
      - uses: coverallsapp/github-action@v1.1.2
        if: inputs.coveralls
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  cargo-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.8.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Copy manual
        run: find target -name '*.[0-9]' -exec cp -vt . {} +
      - run: cargo install cargo-deb
      - run: cargo deb --deb-version '${{ steps.version.outputs.version_commit }}'
        if: steps.version.outputs.version_commit != ''
      - uses: actions/upload-artifact@v2
        if: steps.version.outputs.version_commit != ''
        with:
          if-no-files-found: error
          path: |
            target/debian/*.deb
            target/release/*
  publish-crate:
    needs: [ cargo-check, test-coverage, rustfmt, clippy, cargo-deb ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.8.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        if: steps.version.outputs.version_tagged != '' && env.CARGO_REGISTRY_TOKEN != ''
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  packagecloud:
    needs: [ publish-crate ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.8.0
      - uses: actions/download-artifact@v2
        if: steps.version.outputs.version_tagged != ''
      - uses: docker://lpenz/ghaction-packagecloud:v0.3
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        if: steps.version.outputs.version_tagged != '' && env.PACKAGECLOUD_TOKEN != ''
        with:
          repository: debian/debian/bullseye
      - uses: "marvinpinto/action-automatic-releases@v1.2.1"
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        if: steps.version.outputs.version_tagged != '' && env.PACKAGECLOUD_TOKEN != ''
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            artifact/debian/*.deb
            artifact/release/*
