---
# Copyright (C) 2022 Leandro Lisboa Penz <lpenz@lpenz.org>
# This file is subject to the terms and conditions defined in
# file 'LICENSE', which is part of this source code package.
name: rust
on:
  workflow_call:
    inputs:
      deb:
        required: false
        type: boolean
        default: false
      coveralls:
        required: false
        type: boolean
        default: false
      codecov:
        required: false
        type: boolean
        default: false
      publish_cratesio:
        required: false
        type: boolean
        default: true
      publish_github_release:
        required: false
        type: boolean
        default: true
      publish_packagecloud:
        required: false
        type: boolean
        default: false
    secrets:
      CARGO_REGISTRY_TOKEN:
        required: false
      PACKAGECLOUD_TOKEN:
        required: false
jobs:
  # Some actions inspired by:
  # https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
  cargo-build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cargo build --release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          path: target/release/*
  cargo-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
  cargo-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cargo test with coverage
        id: coverage
        uses: docker://lpenz/ghaction-rust-coverage:0.8.0
      - name: upload coverage data to coveralls
        uses: coverallsapp/github-action@v1.1.2
        if: inputs.coveralls
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
      - name: upload coverage data to codecov
        uses: codecov/codecov-action@v3
        if: inputs.codecov
        with:
          files: ${{ steps.coverage.outputs.report }}
          fail_ci_if_error: true
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: rust fmt --all -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  cargo-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  cargo-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.9.0
      - name: install cargo-deb
        uses: actions-rs/cargo@v1
        if: inputs.deb
        with:
          command: install
          args: cargo-deb
      - name: cargo-deb, test only
        uses: actions-rs/cargo@v1
        if: inputs.deb && steps.version.outputs.version_commit == ''
        with:
          command: deb
      - name: cargo-deb, release
        uses: actions-rs/cargo@v1
        if: inputs.deb && steps.version.outputs.version_commit != ''
        with:
          command: deb
          args: --deb-version '${{ steps.version.outputs.version_commit }}'
      - name: show deb info
        if: inputs.deb
        run: |
          set -e -x;
          dpkg -I target/debian/*.deb
          dpkg -c target/debian/*.deb;
      - uses: actions/upload-artifact@v2
        if: inputs.deb && steps.version.outputs.version_commit != ''
        with:
          if-no-files-found: error
          path: |
            target/debian/*.deb
            target/release/*
  publish-cratesio:
    needs: [ cargo-build-release, cargo-check, cargo-test, rustfmt,
             clippy, cargo-audit, cargo-deb ]
    if: inputs.publish_cratesio
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.9.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: publish crate on crates.io
        uses: katyo/publish-crates@v1
        if: steps.version.outputs.version_tagged != '' && env.CARGO_REGISTRY_TOKEN != ''
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  publish-packagecloud:
    needs: [ cargo-build-release, cargo-check, cargo-test, rustfmt,
             clippy, cargo-audit, cargo-deb ]
    if: inputs.publish_packagecloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.9.0
      - uses: actions/download-artifact@v2
        if: steps.version.outputs.version_tagged != ''
      - name: publish deb on packagecloud
        uses: docker://lpenz/ghaction-packagecloud:0.4
        if: steps.version.outputs.version_tagged != '' && env.PACKAGECLOUD_TOKEN != ''
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        with:
          repository: debian/debian/bullseye
  publish-github-release:
    needs: [ cargo-build-release, cargo-check, cargo-test, rustfmt,
             clippy, cargo-audit, cargo-deb ]
    if: inputs.publish_github_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.9.0
      - uses: actions/download-artifact@v2
      - name: publish github release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        if: steps.version.outputs.version_tagged != '' && env.PACKAGECLOUD_TOKEN != ''
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            artifact/debian/*.deb
            artifact/release/*
